<?xml version="1.0" encoding="utf-8"?>
<Project Sdk="Microsoft.NET.Sdk" InitialTargets="ResolveGameDirectoryDependencies">

    <PropertyGroup>
        <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
        <Platform Condition=" '$(Configuration)' == '' ">Steam</Platform>
    </PropertyGroup>

    <PropertyGroup>
        <ProjectGuid>{81953FA5-C096-4738-850F-ADB54A5D5A9B}</ProjectGuid>
        <RootNamespace>Memoria.Bloomtown</RootNamespace>
        <TargetFramework>net471</TargetFramework>
        <ImplicitUsings>false</ImplicitUsings>
        <Nullable>disable</Nullable>
    </PropertyGroup>

    <PropertyGroup>
        <AssemblyName>Memoria.Bloomtown.$(Configuration)</AssemblyName>
        <SteamApplicationId>2445990</SteamApplicationId>
    </PropertyGroup>

    <UsingTask TaskName="Memoria.MSBuild.Pack" AssemblyFile="..\MSBuild\Memoria.MSBuild.dll"/>
    <UsingTask TaskName="Memoria.MSBuild.ResolveSteamApplicationPath" AssemblyFile="..\MSBuild\Memoria.MSBuild.dll"/>

    <Target Name="ResolveGameDirectoryDependencies">

        <ResolveSteamApplicationPath SteamApplicationId="$(SteamApplicationId)">
            <Output TaskParameter="ResolvedApplicationPath" PropertyName="GamePath"/>
            <Output TaskParameter="CorrectRegistryCommandLine" PropertyName="CorrectRegistryCommandLine"/>
        </ResolveSteamApplicationPath>

        <PropertyGroup>

            <!-- Steam -->
            <GamePath Condition="'$(GamePath)' == ''">$([MSBuild]::GetRegistryValueFromView('HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\Uninstall\Steam App $(SteamApplicationId)', 'InstallLocation', null, RegistryView.Registry32))</GamePath>
            <GamePath Condition="'$(GamePath)' == ''">$([MSBuild]::GetRegistryValueFromView('HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\Uninstall\Steam App $(SteamApplicationId)', 'InstallLocation', null, RegistryView.Registry64))</GamePath>

            <!-- GOG -->
            <GamePath Condition="'$(GamePath)' == ''">$([MSBuild]::GetRegistryValueFromView('HKEY_LOCAL_MACHINE\Software\GOG.com\Games\??????????', 'path', null, RegistryView.Registry32))</GamePath>
            <GamePath Condition="'$(GamePath)' == ''">$([MSBuild]::GetRegistryValueFromView('HKEY_LOCAL_MACHINE\Software\GOG.com\Games\??????????', 'path', null, RegistryView.Registry64))</GamePath>

            <GamePath Condition="'$(GamePath)' == ''">bin\$(AssemblyName)</GamePath>

            <FrameworkPathOverride Condition="'$(GamePath.Contains(`Demo`))' == 'False'">$(GamePath)\Bloomtown a Different Story_Data\Managed</FrameworkPathOverride>
        </PropertyGroup>
		
<!--		<PropertyGroup Condition=" '$(Configuration)' == 'Steam' ">-->
<!--			<DefineConstants>$(DefineConstants);BepInEx6</DefineConstants>-->
<!--		</PropertyGroup>-->
        
        <Message Text="FrameworkPathOverride: $(FrameworkPathOverride)" Importance="high"/>

        <ItemGroup>
            <Compile Remove="Steam\**\*.cs"/>
            <None Include="Steam\**\*.cs"/>
            <Compile Include="$(Configuration)\**\*.cs"/>
        </ItemGroup>

        <ItemGroup>
            <ProjectReference Include="..\Memoria.CodeGenerator\Memoria.CodeGenerator.csproj" OutputItemType="Analyzer" ReferenceOutputAssembly="false"/>
        </ItemGroup>

        <ItemGroup Condition=" '$(Configuration)' == 'Steam' ">
            <Reference Include="0Harmony">
                <HintPath>$(GamePath)\BepInEx\core\0Harmony.dll</HintPath>
                <Private>False</Private>
            </Reference>
            <Reference Include="BepInEx">
                <HintPath>$(GamePath)\BepInEx\core\BepInEx.dll</HintPath>
                <Private>False</Private>
            </Reference>
        </ItemGroup>
		
        <ItemGroup>
            <Reference Include="mscorlib">
                <HintPath>$(FrameworkPathOverride)\mscorlib.dll</HintPath>
                <Private>False</Private>
            </Reference>
            <Reference Include="System">
                <HintPath>$(FrameworkPathOverride)\System.dll</HintPath>
                <Private>False</Private>
            </Reference>
            <Reference Include="System.Core">
                <HintPath>$(FrameworkPathOverride)\System.Core.dll</HintPath>
                <Private>False</Private>
            </Reference>
            <Reference Include="UnityEngine">
                <HintPath>$(FrameworkPathOverride)\UnityEngine.dll</HintPath>
                <Private>False</Private>
            </Reference>
            <Reference Include="UnityEngine.CoreModule">
                <HintPath>$(FrameworkPathOverride)\UnityEngine.CoreModule.dll</HintPath>
                <Private>False</Private>
            </Reference>
            <Reference Include="UnityEngine.InputModule">
                <HintPath>$(FrameworkPathOverride)\UnityEngine.InputModule.dll</HintPath>
                <Private>False</Private>
            </Reference>
            <Reference Include="UnityEngine.InputLegacyModule">
                <HintPath>$(FrameworkPathOverride)\UnityEngine.InputLegacyModule.dll</HintPath>
                <Private>False</Private>
            </Reference>
            <Reference Include="UnityEngine.IMGUIModule">
                <HintPath>$(FrameworkPathOverride)\UnityEngine.IMGUIModule.dll</HintPath>
                <Private>False</Private>
            </Reference>
            <Reference Include="UnityEngine.TextRenderingModule">
                <HintPath>$(FrameworkPathOverride)\UnityEngine.TextRenderingModule.dll</HintPath>
                <Private>False</Private>
            </Reference>
            <Reference Include="UnityEngine.UI">
                <HintPath>$(FrameworkPathOverride)\UnityEngine.UI.dll</HintPath>
                <Private>False</Private>
            </Reference>
            <Reference Include="UnityEngine.UIModule">
                <HintPath>$(FrameworkPathOverride)\UnityEngine.UIModule.dll</HintPath>
                <Private>False</Private>
            </Reference>
            <Reference Include="UnityEngine.VideoModule">
                <HintPath>$(FrameworkPathOverride)\UnityEngine.VideoModule.dll</HintPath>
                <Private>False</Private>
            </Reference>
            <Reference Include="UnityEngine.UnityWebRequestModule">
                <HintPath>$(FrameworkPathOverride)\UnityEngine.UnityWebRequestModule.dll</HintPath>
                <Private>False</Private>
            </Reference>
            <Reference Include="Unity.TextMeshPro">
                <HintPath>$(FrameworkPathOverride)\Unity.TextMeshPro.dll</HintPath>
                <Private>False</Private>
            </Reference>
            <Reference Include="Assembly-CSharp">
                <HintPath>$(FrameworkPathOverride)\Assembly-CSharp.dll</HintPath>
                <Private>False</Private>
            </Reference>
            <Reference Include="AstarPathfindingProject">
                <HintPath>$(FrameworkPathOverride)\AstarPathfindingProject.dll</HintPath>
                <Private>False</Private>
            </Reference>
            <Reference Include="Sirenix.Serialization">
                <HintPath>$(FrameworkPathOverride)\Sirenix.Serialization.dll</HintPath>
                <Private>False</Private>
            </Reference>
            <Reference Include="FMODUnity">
                <HintPath>$(FrameworkPathOverride)\FMODUnity.dll</HintPath>
                <Private>False</Private>
            </Reference>
        </ItemGroup>

        <ItemGroup>
            <PackageReference Include="Newtonsoft.Json" Version="13.0.3"/>
        </ItemGroup>
        
    </Target>

    <Target Name="CopyToGame" AfterTargets="Build">
        <Message Text="Copying output files from $(OutputPath) to $(GamePath)\BepInEx\plugins\" Importance="high"/>
        <ItemGroup>
            <OutputFiles Include="$(OutputPath)**\*.*" Exclude="$(OutputPath)**\System.*" />
        </ItemGroup>
        <Copy SourceFiles="@(OutputFiles)" DestinationFolder="$(GamePath)\BepInEx\plugins\" />
    </Target>

    <Target Name="CompileAll" AfterTargets="Build">
        <MSBuild Condition=" '$(Configuration)' != 'Steam' " Projects="$(MSBuildProjectFile)" Properties="Configuration=Steam" RunEachTargetSeparately="true" BuildInParallel="true"/>
    </Target>

    <Target Name="PublishAll" AfterTargets="Publish">
        <MSBuild Condition=" '$(Configuration)' != 'Steam' " Projects="$(MSBuildProjectFile)" Properties="Configuration=Steam" Targets="Publish" RunEachTargetSeparately="true" BuildInParallel="true"/>
    </Target>

    <Target Name="PublishAll" AfterTargets="Publish">
        <MSBuild Condition=" '$(Configuration)' != 'Steam' " Projects="$(MSBuildProjectFile)" Properties="Configuration=Steam" Targets="Publish" RunEachTargetSeparately="true" BuildInParallel="true"/>
        <Pack PublishDirectory="..\Publish" Configuration="$(Configuration)"/>
    </Target>

</Project>